
jpaci001_finalproject_car.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000042c  000004c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000042c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001b  00800104  00800104  000004c4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004c4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00000534  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b28  00000000  00000000  00000584  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000915  00000000  00000000  000010ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000046b  00000000  00000000  000019c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000104  00000000  00000000  00001e2c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000544  00000000  00000000  00001f30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000438  00000000  00000000  00002474  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  000028ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	50 c0       	rjmp	.+160    	; 0xa2 <__ctors_end>
   2:	00 00       	nop
   4:	6b c0       	rjmp	.+214    	; 0xdc <__bad_interrupt>
   6:	00 00       	nop
   8:	69 c0       	rjmp	.+210    	; 0xdc <__bad_interrupt>
   a:	00 00       	nop
   c:	67 c0       	rjmp	.+206    	; 0xdc <__bad_interrupt>
   e:	00 00       	nop
  10:	65 c0       	rjmp	.+202    	; 0xdc <__bad_interrupt>
  12:	00 00       	nop
  14:	63 c0       	rjmp	.+198    	; 0xdc <__bad_interrupt>
  16:	00 00       	nop
  18:	61 c0       	rjmp	.+194    	; 0xdc <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5f c0       	rjmp	.+190    	; 0xdc <__bad_interrupt>
  1e:	00 00       	nop
  20:	5d c0       	rjmp	.+186    	; 0xdc <__bad_interrupt>
  22:	00 00       	nop
  24:	5b c0       	rjmp	.+182    	; 0xdc <__bad_interrupt>
  26:	00 00       	nop
  28:	59 c0       	rjmp	.+178    	; 0xdc <__bad_interrupt>
  2a:	00 00       	nop
  2c:	57 c0       	rjmp	.+174    	; 0xdc <__bad_interrupt>
  2e:	00 00       	nop
  30:	55 c0       	rjmp	.+170    	; 0xdc <__bad_interrupt>
  32:	00 00       	nop
  34:	3a c1       	rjmp	.+628    	; 0x2aa <__vector_13>
  36:	00 00       	nop
  38:	51 c0       	rjmp	.+162    	; 0xdc <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4f c0       	rjmp	.+158    	; 0xdc <__bad_interrupt>
  3e:	00 00       	nop
  40:	4d c0       	rjmp	.+154    	; 0xdc <__bad_interrupt>
  42:	00 00       	nop
  44:	4b c0       	rjmp	.+150    	; 0xdc <__bad_interrupt>
  46:	00 00       	nop
  48:	49 c0       	rjmp	.+146    	; 0xdc <__bad_interrupt>
  4a:	00 00       	nop
  4c:	47 c0       	rjmp	.+142    	; 0xdc <__bad_interrupt>
  4e:	00 00       	nop
  50:	45 c0       	rjmp	.+138    	; 0xdc <__bad_interrupt>
  52:	00 00       	nop
  54:	43 c0       	rjmp	.+134    	; 0xdc <__bad_interrupt>
  56:	00 00       	nop
  58:	41 c0       	rjmp	.+130    	; 0xdc <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3f c0       	rjmp	.+126    	; 0xdc <__bad_interrupt>
  5e:	00 00       	nop
  60:	3d c0       	rjmp	.+122    	; 0xdc <__bad_interrupt>
  62:	00 00       	nop
  64:	3b c0       	rjmp	.+118    	; 0xdc <__bad_interrupt>
  66:	00 00       	nop
  68:	39 c0       	rjmp	.+114    	; 0xdc <__bad_interrupt>
  6a:	00 00       	nop
  6c:	37 c0       	rjmp	.+110    	; 0xdc <__bad_interrupt>
  6e:	00 00       	nop
  70:	35 c0       	rjmp	.+106    	; 0xdc <__bad_interrupt>
  72:	00 00       	nop
  74:	33 c0       	rjmp	.+102    	; 0xdc <__bad_interrupt>
  76:	00 00       	nop
  78:	31 c0       	rjmp	.+98     	; 0xdc <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2f c0       	rjmp	.+94     	; 0xdc <__bad_interrupt>
  7e:	00 00       	nop
  80:	2d c0       	rjmp	.+90     	; 0xdc <__bad_interrupt>
  82:	00 00       	nop
  84:	2b c0       	rjmp	.+86     	; 0xdc <__bad_interrupt>
  86:	00 00       	nop
  88:	29 c0       	rjmp	.+82     	; 0xdc <__bad_interrupt>
  8a:	00 00       	nop
  8c:	c2 00       	.word	0x00c2	; ????
  8e:	7f 00       	.word	0x007f	; ????
  90:	83 00       	.word	0x0083	; ????
  92:	8a 00       	.word	0x008a	; ????
  94:	c8 00       	.word	0x00c8	; ????
  96:	c8 00       	.word	0x00c8	; ????
  98:	a1 00       	.word	0x00a1	; ????
  9a:	b7 00       	.word	0x00b7	; ????
  9c:	e1 00       	.word	0x00e1	; ????
  9e:	ac 00       	.word	0x00ac	; ????
  a0:	86 00       	.word	0x0086	; ????

000000a2 <__ctors_end>:
  a2:	11 24       	eor	r1, r1
  a4:	1f be       	out	0x3f, r1	; 63
  a6:	cf ef       	ldi	r28, 0xFF	; 255
  a8:	d0 e4       	ldi	r29, 0x40	; 64
  aa:	de bf       	out	0x3e, r29	; 62
  ac:	cd bf       	out	0x3d, r28	; 61

000000ae <__do_copy_data>:
  ae:	11 e0       	ldi	r17, 0x01	; 1
  b0:	a0 e0       	ldi	r26, 0x00	; 0
  b2:	b1 e0       	ldi	r27, 0x01	; 1
  b4:	ec e2       	ldi	r30, 0x2C	; 44
  b6:	f4 e0       	ldi	r31, 0x04	; 4
  b8:	00 e0       	ldi	r16, 0x00	; 0
  ba:	0b bf       	out	0x3b, r16	; 59
  bc:	02 c0       	rjmp	.+4      	; 0xc2 <__do_copy_data+0x14>
  be:	07 90       	elpm	r0, Z+
  c0:	0d 92       	st	X+, r0
  c2:	a4 30       	cpi	r26, 0x04	; 4
  c4:	b1 07       	cpc	r27, r17
  c6:	d9 f7       	brne	.-10     	; 0xbe <__do_copy_data+0x10>

000000c8 <__do_clear_bss>:
  c8:	21 e0       	ldi	r18, 0x01	; 1
  ca:	a4 e0       	ldi	r26, 0x04	; 4
  cc:	b1 e0       	ldi	r27, 0x01	; 1
  ce:	01 c0       	rjmp	.+2      	; 0xd2 <.do_clear_bss_start>

000000d0 <.do_clear_bss_loop>:
  d0:	1d 92       	st	X+, r1

000000d2 <.do_clear_bss_start>:
  d2:	af 31       	cpi	r26, 0x1F	; 31
  d4:	b2 07       	cpc	r27, r18
  d6:	e1 f7       	brne	.-8      	; 0xd0 <.do_clear_bss_loop>
  d8:	6b d1       	rcall	.+726    	; 0x3b0 <main>
  da:	a6 c1       	rjmp	.+844    	; 0x428 <_exit>

000000dc <__bad_interrupt>:
  dc:	91 cf       	rjmp	.-222    	; 0x0 <__vectors>

000000de <moveTick>:
		if(c==0){return b;}
		a = b;
		b = c;
	}
	return 0;
}
  de:	20 b1       	in	r18, 0x00	; 0
  e0:	31 e0       	ldi	r19, 0x01	; 1
  e2:	42 2f       	mov	r20, r18
  e4:	41 70       	andi	r20, 0x01	; 1
  e6:	20 fd       	sbrc	r18, 0
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	30 93 1b 01 	sts	0x011B, r19	; 0x80011b <button>
  ee:	8b 30       	cpi	r24, 0x0B	; 11
  f0:	91 05       	cpc	r25, r1
  f2:	08 f0       	brcs	.+2      	; 0xf6 <moveTick+0x18>
  f4:	6b c0       	rjmp	.+214    	; 0x1cc <moveTick+0xee>
  f6:	fc 01       	movw	r30, r24
  f8:	ea 5b       	subi	r30, 0xBA	; 186
  fa:	ff 4f       	sbci	r31, 0xFF	; 255
  fc:	8c c1       	rjmp	.+792    	; 0x416 <__tablejump2__>
  fe:	44 23       	and	r20, r20
 100:	09 f4       	brne	.+2      	; 0x104 <moveTick+0x26>
 102:	67 c0       	rjmp	.+206    	; 0x1d2 <moveTick+0xf4>
 104:	3f c0       	rjmp	.+126    	; 0x184 <moveTick+0xa6>
 106:	41 11       	cpse	r20, r1
 108:	43 c0       	rjmp	.+134    	; 0x190 <moveTick+0xb2>
 10a:	08 95       	ret
 10c:	44 23       	and	r20, r20
 10e:	09 f4       	brne	.+2      	; 0x112 <moveTick+0x34>
 110:	62 c0       	rjmp	.+196    	; 0x1d6 <moveTick+0xf8>
 112:	38 c0       	rjmp	.+112    	; 0x184 <moveTick+0xa6>
 114:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <rightSens>
 118:	88 23       	and	r24, r24
 11a:	29 f0       	breq	.+10     	; 0x126 <moveTick+0x48>
 11c:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <frontSens>
 120:	81 11       	cpse	r24, r1
 122:	4a c0       	rjmp	.+148    	; 0x1b8 <moveTick+0xda>
 124:	3a c0       	rjmp	.+116    	; 0x19a <moveTick+0xbc>
 126:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <leftSens>
 12a:	88 23       	and	r24, r24
 12c:	29 f0       	breq	.+10     	; 0x138 <moveTick+0x5a>
 12e:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <frontSens>
 132:	81 11       	cpse	r24, r1
 134:	46 c0       	rjmp	.+140    	; 0x1c2 <moveTick+0xe4>
 136:	36 c0       	rjmp	.+108    	; 0x1a4 <moveTick+0xc6>
 138:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <frontSens>
 13c:	81 11       	cpse	r24, r1
 13e:	37 c0       	rjmp	.+110    	; 0x1ae <moveTick+0xd0>
 140:	27 c0       	rjmp	.+78     	; 0x190 <moveTick+0xb2>
 142:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <left>
 146:	83 30       	cpi	r24, 0x03	; 3
 148:	18 f0       	brcs	.+6      	; 0x150 <moveTick+0x72>
 14a:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <left>
 14e:	39 c0       	rjmp	.+114    	; 0x1c2 <moveTick+0xe4>
 150:	8f 5f       	subi	r24, 0xFF	; 255
 152:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <left>
 156:	1c c0       	rjmp	.+56     	; 0x190 <moveTick+0xb2>
 158:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <UT_count>
 15c:	24 30       	cpi	r18, 0x04	; 4
 15e:	18 f0       	brcs	.+6      	; 0x166 <moveTick+0x88>
 160:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <UT_count>
 164:	15 c0       	rjmp	.+42     	; 0x190 <moveTick+0xb2>
 166:	2f 5f       	subi	r18, 0xFF	; 255
 168:	20 93 16 01 	sts	0x0116, r18	; 0x800116 <UT_count>
 16c:	08 95       	ret
 16e:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <right>
 172:	83 30       	cpi	r24, 0x03	; 3
 174:	18 f0       	brcs	.+6      	; 0x17c <moveTick+0x9e>
 176:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <right>
 17a:	1e c0       	rjmp	.+60     	; 0x1b8 <moveTick+0xda>
 17c:	8f 5f       	subi	r24, 0xFF	; 255
 17e:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <right>
 182:	06 c0       	rjmp	.+12     	; 0x190 <moveTick+0xb2>
 184:	15 b8       	out	0x05, r1	; 5
 186:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <count>
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	08 95       	ret
 190:	85 e0       	ldi	r24, 0x05	; 5
 192:	85 b9       	out	0x05, r24	; 5
 194:	83 e0       	ldi	r24, 0x03	; 3
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	08 95       	ret
 19a:	84 e0       	ldi	r24, 0x04	; 4
 19c:	85 b9       	out	0x05, r24	; 5
 19e:	84 e0       	ldi	r24, 0x04	; 4
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	08 95       	ret
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	85 b9       	out	0x05, r24	; 5
 1a8:	85 e0       	ldi	r24, 0x05	; 5
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	08 95       	ret
 1ae:	8a e0       	ldi	r24, 0x0A	; 10
 1b0:	85 b9       	out	0x05, r24	; 5
 1b2:	88 e0       	ldi	r24, 0x08	; 8
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	08 95       	ret
 1b8:	86 e0       	ldi	r24, 0x06	; 6
 1ba:	85 b9       	out	0x05, r24	; 5
 1bc:	86 e0       	ldi	r24, 0x06	; 6
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	08 95       	ret
 1c2:	89 e0       	ldi	r24, 0x09	; 9
 1c4:	85 b9       	out	0x05, r24	; 5
 1c6:	87 e0       	ldi	r24, 0x07	; 7
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	08 95       	ret
 1cc:	80 e0       	ldi	r24, 0x00	; 0
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	08 95       	ret
 1d2:	82 e0       	ldi	r24, 0x02	; 2
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	08 95       	ret

000001d8 <TimerISR>:
 1d8:	cf 92       	push	r12
 1da:	df 92       	push	r13
 1dc:	ef 92       	push	r14
 1de:	ff 92       	push	r15
 1e0:	1f 93       	push	r17
 1e2:	cf 93       	push	r28
 1e4:	df 93       	push	r29
 1e6:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <i.1614>
 1ea:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <tasksNum>
 1ee:	88 23       	and	r24, r24
 1f0:	09 f4       	brne	.+2      	; 0x1f4 <TimerISR+0x1c>
 1f2:	53 c0       	rjmp	.+166    	; 0x29a <TimerISR+0xc2>
 1f4:	80 e0       	ldi	r24, 0x00	; 0
 1f6:	1b e0       	ldi	r17, 0x0B	; 11
 1f8:	c0 91 17 01 	lds	r28, 0x0117	; 0x800117 <tasks>
 1fc:	d0 91 18 01 	lds	r29, 0x0118	; 0x800118 <tasks+0x1>
 200:	18 9f       	mul	r17, r24
 202:	c0 0d       	add	r28, r0
 204:	d1 1d       	adc	r29, r1
 206:	11 24       	eor	r1, r1
 208:	4d 81       	ldd	r20, Y+5	; 0x05
 20a:	5e 81       	ldd	r21, Y+6	; 0x06
 20c:	6f 81       	ldd	r22, Y+7	; 0x07
 20e:	78 85       	ldd	r23, Y+8	; 0x08
 210:	89 81       	ldd	r24, Y+1	; 0x01
 212:	9a 81       	ldd	r25, Y+2	; 0x02
 214:	ab 81       	ldd	r26, Y+3	; 0x03
 216:	bc 81       	ldd	r27, Y+4	; 0x04
 218:	48 17       	cp	r20, r24
 21a:	59 07       	cpc	r21, r25
 21c:	6a 07       	cpc	r22, r26
 21e:	7b 07       	cpc	r23, r27
 220:	b0 f0       	brcs	.+44     	; 0x24e <TimerISR+0x76>
 222:	88 81       	ld	r24, Y
 224:	e9 85       	ldd	r30, Y+9	; 0x09
 226:	fa 85       	ldd	r31, Y+10	; 0x0a
 228:	08 2e       	mov	r0, r24
 22a:	00 0c       	add	r0, r0
 22c:	99 0b       	sbc	r25, r25
 22e:	09 95       	icall
 230:	88 83       	st	Y, r24
 232:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <i.1614>
 236:	e0 91 17 01 	lds	r30, 0x0117	; 0x800117 <tasks>
 23a:	f0 91 18 01 	lds	r31, 0x0118	; 0x800118 <tasks+0x1>
 23e:	18 9f       	mul	r17, r24
 240:	e0 0d       	add	r30, r0
 242:	f1 1d       	adc	r31, r1
 244:	11 24       	eor	r1, r1
 246:	15 82       	std	Z+5, r1	; 0x05
 248:	16 82       	std	Z+6, r1	; 0x06
 24a:	17 82       	std	Z+7, r1	; 0x07
 24c:	10 86       	std	Z+8, r1	; 0x08
 24e:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <i.1614>
 252:	e0 91 17 01 	lds	r30, 0x0117	; 0x800117 <tasks>
 256:	f0 91 18 01 	lds	r31, 0x0118	; 0x800118 <tasks+0x1>
 25a:	18 9f       	mul	r17, r24
 25c:	e0 0d       	add	r30, r0
 25e:	f1 1d       	adc	r31, r1
 260:	11 24       	eor	r1, r1
 262:	c5 80       	ldd	r12, Z+5	; 0x05
 264:	d6 80       	ldd	r13, Z+6	; 0x06
 266:	e7 80       	ldd	r14, Z+7	; 0x07
 268:	f0 84       	ldd	r15, Z+8	; 0x08
 26a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
 26e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
 272:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__data_start+0x2>
 276:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__data_start+0x3>
 27a:	4c 0d       	add	r20, r12
 27c:	5d 1d       	adc	r21, r13
 27e:	6e 1d       	adc	r22, r14
 280:	7f 1d       	adc	r23, r15
 282:	45 83       	std	Z+5, r20	; 0x05
 284:	56 83       	std	Z+6, r21	; 0x06
 286:	67 83       	std	Z+7, r22	; 0x07
 288:	70 87       	std	Z+8, r23	; 0x08
 28a:	8f 5f       	subi	r24, 0xFF	; 255
 28c:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <i.1614>
 290:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <tasksNum>
 294:	89 17       	cp	r24, r25
 296:	08 f4       	brcc	.+2      	; 0x29a <TimerISR+0xc2>
 298:	af cf       	rjmp	.-162    	; 0x1f8 <TimerISR+0x20>
 29a:	df 91       	pop	r29
 29c:	cf 91       	pop	r28
 29e:	1f 91       	pop	r17
 2a0:	ff 90       	pop	r15
 2a2:	ef 90       	pop	r14
 2a4:	df 90       	pop	r13
 2a6:	cf 90       	pop	r12
 2a8:	08 95       	ret

000002aa <__vector_13>:
 2aa:	1f 92       	push	r1
 2ac:	0f 92       	push	r0
 2ae:	0f b6       	in	r0, 0x3f	; 63
 2b0:	0f 92       	push	r0
 2b2:	11 24       	eor	r1, r1
 2b4:	0b b6       	in	r0, 0x3b	; 59
 2b6:	0f 92       	push	r0
 2b8:	2f 93       	push	r18
 2ba:	3f 93       	push	r19
 2bc:	4f 93       	push	r20
 2be:	5f 93       	push	r21
 2c0:	6f 93       	push	r22
 2c2:	7f 93       	push	r23
 2c4:	8f 93       	push	r24
 2c6:	9f 93       	push	r25
 2c8:	af 93       	push	r26
 2ca:	bf 93       	push	r27
 2cc:	ef 93       	push	r30
 2ce:	ff 93       	push	r31
 2d0:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <tasksPeriodCntDown>
 2d4:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <tasksPeriodCntDown+0x1>
 2d8:	a0 91 13 01 	lds	r26, 0x0113	; 0x800113 <tasksPeriodCntDown+0x2>
 2dc:	b0 91 14 01 	lds	r27, 0x0114	; 0x800114 <tasksPeriodCntDown+0x3>
 2e0:	01 97       	sbiw	r24, 0x01	; 1
 2e2:	a1 09       	sbc	r26, r1
 2e4:	b1 09       	sbc	r27, r1
 2e6:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <tasksPeriodCntDown>
 2ea:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <tasksPeriodCntDown+0x1>
 2ee:	a0 93 13 01 	sts	0x0113, r26	; 0x800113 <tasksPeriodCntDown+0x2>
 2f2:	b0 93 14 01 	sts	0x0114, r27	; 0x800114 <tasksPeriodCntDown+0x3>
 2f6:	89 2b       	or	r24, r25
 2f8:	8a 2b       	or	r24, r26
 2fa:	8b 2b       	or	r24, r27
 2fc:	89 f4       	brne	.+34     	; 0x320 <__vector_13+0x76>
 2fe:	6c df       	rcall	.-296    	; 0x1d8 <TimerISR>
 300:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 304:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 308:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 30c:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 310:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <tasksPeriodCntDown>
 314:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <tasksPeriodCntDown+0x1>
 318:	a0 93 13 01 	sts	0x0113, r26	; 0x800113 <tasksPeriodCntDown+0x2>
 31c:	b0 93 14 01 	sts	0x0114, r27	; 0x800114 <tasksPeriodCntDown+0x3>
 320:	ff 91       	pop	r31
 322:	ef 91       	pop	r30
 324:	bf 91       	pop	r27
 326:	af 91       	pop	r26
 328:	9f 91       	pop	r25
 32a:	8f 91       	pop	r24
 32c:	7f 91       	pop	r23
 32e:	6f 91       	pop	r22
 330:	5f 91       	pop	r21
 332:	4f 91       	pop	r20
 334:	3f 91       	pop	r19
 336:	2f 91       	pop	r18
 338:	0f 90       	pop	r0
 33a:	0b be       	out	0x3b, r0	; 59
 33c:	0f 90       	pop	r0
 33e:	0f be       	out	0x3f, r0	; 63
 340:	0f 90       	pop	r0
 342:	1f 90       	pop	r1
 344:	18 95       	reti

00000346 <TimerSet>:
 346:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
 34a:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 34e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
 352:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
 356:	60 93 11 01 	sts	0x0111, r22	; 0x800111 <tasksPeriodCntDown>
 35a:	70 93 12 01 	sts	0x0112, r23	; 0x800112 <tasksPeriodCntDown+0x1>
 35e:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <tasksPeriodCntDown+0x2>
 362:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <tasksPeriodCntDown+0x3>
 366:	08 95       	ret

00000368 <TimerOn>:
 368:	8b e0       	ldi	r24, 0x0B	; 11
 36a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 36e:	8d e7       	ldi	r24, 0x7D	; 125
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 376:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 37a:	82 e0       	ldi	r24, 0x02	; 2
 37c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 380:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 384:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 388:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 38c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 390:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 394:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 398:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <tasksPeriodCntDown>
 39c:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <tasksPeriodCntDown+0x1>
 3a0:	a0 93 13 01 	sts	0x0113, r26	; 0x800113 <tasksPeriodCntDown+0x2>
 3a4:	b0 93 14 01 	sts	0x0114, r27	; 0x800114 <tasksPeriodCntDown+0x3>
 3a8:	8f b7       	in	r24, 0x3f	; 63
 3aa:	80 68       	ori	r24, 0x80	; 128
 3ac:	8f bf       	out	0x3f, r24	; 63
 3ae:	08 95       	ret

000003b0 <main>:
	return state;
}

int main(void)
{
	DDRA = 0x00; PORTA = 0xFF;
 3b0:	11 b8       	out	0x01, r1	; 1
 3b2:	8f ef       	ldi	r24, 0xFF	; 255
 3b4:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00;
 3b6:	84 b9       	out	0x04, r24	; 4
 3b8:	15 b8       	out	0x05, r1	; 5

	unsigned long int moveTick_calc = 250;

	unsigned long int tmpGCD = 1;

	tasksPeriodGCD = tmpGCD;
 3ba:	41 e0       	ldi	r20, 0x01	; 1
 3bc:	50 e0       	ldi	r21, 0x00	; 0
 3be:	60 e0       	ldi	r22, 0x00	; 0
 3c0:	70 e0       	ldi	r23, 0x00	; 0
 3c2:	40 93 00 01 	sts	0x0100, r20	; 0x800100 <__data_start>
 3c6:	50 93 01 01 	sts	0x0101, r21	; 0x800101 <__data_start+0x1>
 3ca:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <__data_start+0x2>
 3ce:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <__data_start+0x3>

	unsigned long int moveTick_period = moveTick_calc/tasksPeriodGCD;

	static task moveTask;
	tasks = &moveTask;
 3d2:	e4 e0       	ldi	r30, 0x04	; 4
 3d4:	f1 e0       	ldi	r31, 0x01	; 1
 3d6:	f0 93 18 01 	sts	0x0118, r31	; 0x800118 <tasks+0x1>
 3da:	e0 93 17 01 	sts	0x0117, r30	; 0x800117 <tasks>
	tasksNum = sizeof(tasks)/sizeof(task*);
 3de:	91 e0       	ldi	r25, 0x01	; 1
 3e0:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <tasksNum>

	// Movement Task
	moveTask.state = -1;
 3e4:	80 83       	st	Z, r24
	moveTask.period = moveTick_period;
 3e6:	8a ef       	ldi	r24, 0xFA	; 250
 3e8:	90 e0       	ldi	r25, 0x00	; 0
 3ea:	a0 e0       	ldi	r26, 0x00	; 0
 3ec:	b0 e0       	ldi	r27, 0x00	; 0
 3ee:	81 83       	std	Z+1, r24	; 0x01
 3f0:	92 83       	std	Z+2, r25	; 0x02
 3f2:	a3 83       	std	Z+3, r26	; 0x03
 3f4:	b4 83       	std	Z+4, r27	; 0x04
	moveTask.elapsedTime = moveTick_period;
 3f6:	85 83       	std	Z+5, r24	; 0x05
 3f8:	96 83       	std	Z+6, r25	; 0x06
 3fa:	a7 83       	std	Z+7, r26	; 0x07
 3fc:	b0 87       	std	Z+8, r27	; 0x08
	moveTask.TickFct = &moveTick;
 3fe:	8f e6       	ldi	r24, 0x6F	; 111
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	92 87       	std	Z+10, r25	; 0x0a
 404:	81 87       	std	Z+9, r24	; 0x09

	TimerSet(tasksPeriodGCD);
 406:	61 e0       	ldi	r22, 0x01	; 1
 408:	70 e0       	ldi	r23, 0x00	; 0
 40a:	80 e0       	ldi	r24, 0x00	; 0
	TimerOn();
 40c:	90 e0       	ldi	r25, 0x00	; 0

    /* Replace with your application code */
    while (1) 
    {
		TimerISR();
 40e:	9b df       	rcall	.-202    	; 0x346 <TimerSet>
 410:	ab df       	rcall	.-170    	; 0x368 <TimerOn>
 412:	e2 de       	rcall	.-572    	; 0x1d8 <TimerISR>
 414:	fe cf       	rjmp	.-4      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>

00000416 <__tablejump2__>:
 416:	ee 0f       	add	r30, r30
 418:	ff 1f       	adc	r31, r31
 41a:	00 24       	eor	r0, r0
 41c:	00 1c       	adc	r0, r0
 41e:	0b be       	out	0x3b, r0	; 59
 420:	07 90       	elpm	r0, Z+
 422:	f6 91       	elpm	r31, Z
 424:	e0 2d       	mov	r30, r0
 426:	09 94       	ijmp

00000428 <_exit>:
 428:	f8 94       	cli

0000042a <__stop_program>:
 42a:	ff cf       	rjmp	.-2      	; 0x42a <__stop_program>
